#!/bin/bash
# From acleverpun on github

# Shows ip address of a given interface
#
# @param {String} interface: The network interface to check

full=""
short=""
color=""

interface="${BLOCK_INSTANCE:-"eth0"}"
netPath=/sys/class/net
interfacePath=`echo $netPath/$interface`
# Expand wildcard interfaces
interface=${interfacePath#$netPath/}

state="$(cat $interfacePath/operstate)"

if [[ $state != "up" ]]; then
    # if the interface is downright down (haha), it shouldn't be displayed
    exit 0
fi

ipaddr="$(ip addr show $interface | perl -n -e'/inet (.+)\// && print $1')"

if [[ $BLOCK_INSTANCE == wlp* ]]; then
    quality=$(grep $interface /proc/net/wireless | awk '{ print int($3 * 100 / 70) }')
    qualityfull="$quality% at $(iw $interface link | grep SSID | cut -d " " -f 2-)"
    speed=$(iw wlp3s0 link \
            | grep bitrate \
            | sed -E -e '1s/(.+) MBit/\1↓ /1' -e '2s/(.+) MBit/\1↑ /1' \
            | cut -d " " -f 3)
elif [[ $BLOCK_INSTANCE == enp* ]]; then
    quality="100"
    speed=$(cat $interfacePath/speed)
fi

if [[ $ipaddr == "" ]]; then
    full="no IP (${qualityfull})"
else
    full="${qualityfull} ${speed} Mb/s"
fi

short=$full

# color
if [[ $ipaddr == "" ]]; then
    color="#FF0000"
elif [[ $quality -ge 85 ]]; then
    color="#00FF00"
elif [[ $quality -lt 85 ]]; then
    color=""
elif [[ $quality -lt 50 ]]; then
    color="#FFFF00"
elif [[ $quality -lt 30 ]]; then
    color="#FF5F00"
fi

echo $full
echo $short
if [[ $color != "" ]]; then
  echo $color
fi
